// <auto-generated />
using System;
using Editor;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Editor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Editor.AppError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Info")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Kind")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("StackTrace")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("AppErrors");
                });

            modelBuilder.Entity("Editor.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Json")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Json = "{'users': [{'userName': 'Test User', 'email': 'aa@bb@cc'}]}",
                            Name = "First Project",
                            OwnerId = 1
                        });
                });

            modelBuilder.Entity("Editor.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Complexity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DataModel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Diff")
                        .HasColumnType("int");

                    b.Property<int>("DownloadedCount")
                        .HasColumnType("int");

                    b.Property<string>("Example")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("GeneratedCount")
                        .HasColumnType("int");

                    b.Property<int>("Hash")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("Editor.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActivationToken")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Newsletter")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "example@email.com",
                            IsActive = true,
                            Newsletter = true,
                            PasswordHash = "AQAAAAEAACcQAAAAEJDgdPzzW8vIeFqlb55ARisJNIbxJw5ymbV0PaoEiwt+WHEXXrNxdOpcqFLanEtSuA==",
                            UserName = "Sample User"
                        },
                        new
                        {
                            Id = 2,
                            Email = "example2@email.com",
                            IsActive = true,
                            Newsletter = true,
                            PasswordHash = "AQAAAAEAACcQAAAAEH9t4DjcR+seGM3qxaYrsRajiLcPQdwCep4nuF9DVaG6Aed3SjNHGUnrpx8VMYEYxw==",
                            UserName = "Sample User 2"
                        },
                        new
                        {
                            Id = 3,
                            Email = "example3@email.com",
                            IsActive = true,
                            Newsletter = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEHclQLooH3XJH5+1iiko+BOJtAQbYxBwRePldOaBDHN1sifvRWjhTr2CrGFr7nt1TQ==",
                            UserName = "Sample User 3"
                        });
                });

            modelBuilder.Entity("Editor.Project", b =>
                {
                    b.HasOne("Editor.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
