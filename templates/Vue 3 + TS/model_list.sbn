<template>
  <div class="container-fluid"> 
    <div class="row">
      <div
        class="col-md-2"
        v-for="item in {{ camel_case class.name.plural }}"
        :key="item.id"
      >
        <{{ camel_case class.name }}-view  :{{ camel_case class.name }}="item"  @delete="deletePet(item)"></{{ camel_case class.name }}-view>
      </div>
    </div>
  </div>
</template>

<script lang="ts">
import { defineComponent } from 'vue';
import { useStore } from 'vuex';
import { State } from '../store';
import {{ class.name }}View from '../components/{{ class.name }}View.vue';
import { {{ class.name }} } from '../models/{{ class.name }}';

export default defineComponent({
  components: { {{ class.name }}View },
  setup: async function () {
    const store = useStore<State>();
    const {{ camel_case class.name.plural }} = await store.dispatch('{{ camel_case class.name.plural }}/get{{ class.name.plural }}');
    return { {{ camel_case class.name.plural }} }
  },
  methods: {
    delete{{ class.name }}({{ camel_case class.name }}: {{ class.name }}){
      if (confirm(`Are you sure to delete {{ class.name }} with id ${pet.id}?`))
        this.store.dispatch("{{ camel_case class.name.plural }}/delete{{ class.name }}", {{ camel_case class.name }})
    }
  }
});
</script>