/* 
 * Generated by BootGen https://github.com/BootGen/BootGenVue
 */

using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Newtonsoft.Json.Linq;

namespace {{ name_space }}
{
    public class DataContext : DbContext
    {
        {{~ for class in classes ~}}
        public DbSet<{{ class.name }}> {{ class.name.plural }} { get; set; }
        {{~ end ~}}
        protected override void OnConfiguring(DbContextOptionsBuilder options)
            => options.UseSqlite("Data Source={{ snake_case name_space }}.db");

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            {{~ for class in classes ~}}
            {{~ for property in class.properties ~}}
            {{~ if property.class && !property.is_collection ~}}
            modelBuilder.Entity<{{ class.name }}>()
                .HasOne(p => p.{{ property.name }})
                .WithMany({{ if property.mirror_property }}p => p.{{ property.mirror_property.name }}{{ end }})
                .HasForeignKey(p => p.{{ property.name }}Id);

            {{~ end ~}}
            {{~ end ~}}
            {{~ end ~}}
            {{~ for item in seedList ~}}
            modelBuilder.Entity<{{item.name}}>().HasData(new {{item.name}} {
                {{~ for kvp in item.values ~}}
                {{ kvp.key }} = {{ kvp.value }}{{ if !for.last}},{{ end }}
                {{~ end ~}}
            });
            {{~ end ~}}
        }
    }
}