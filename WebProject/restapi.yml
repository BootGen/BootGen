openapi: '3.0.0'
info:
  version: 1.0.0
  title: 'My Project'
  license:
    name: MIT
servers:
  - url: https://localhost:5001
paths:
  /users:
    get:
      security:
      - bearerAuth: []
      summary: retrieve list of users
      operationId: getUsers
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      security:
      - bearerAuth: []
      summary: retrieve users resource
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}/projects:
    get:
      summary: retrieve list of projects
      operationId: getProjectsOfUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  /projects:
    get:
      summary: retrieve list of projects
      operationId: getProjects
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      summary: add a new element to the collection
      operationId: addProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: successful insertion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /projects/{projectId}:
    get:
      summary: retrieve projects resource
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    put:
      summary: update projects resource
      operationId: updateProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: successful update
    delete:
      summary: delete projects resource
      operationId: deleteProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful deletion
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
  schemas:
    User:
      type: object
      required:
        - id
        - user_name
        - email
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        user_name:
          type: string
        email:
          type: string
    Project:
      type: object
      required:
        - id
        - name
        - json
        - owner_id
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        name:
          type: string
        json:
          type: string
        owner_id:
          type: integer
          format: int32
